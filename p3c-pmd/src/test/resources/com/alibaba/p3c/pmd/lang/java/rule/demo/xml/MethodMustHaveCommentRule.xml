<?xml version="1.0" encoding="UTF-8"?>
<test-data>
    <!-- 没有注释-->
    <code-fragment id="method-main-activity"><![CDATA[
    public class MainActivity extends AppCompatActivity implements View.OnClickListener {
    Button btn1, btn2;
    TextView textView;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        btn1 = findViewById(R.id.button1);
        btn1.setOnClickListener(this);
        btn2 = findViewById(R.id.button2);
        btn2.setOnClickListener(this);
        textView = findViewById(R.id.textView);
    }

    public String getString() {
        return null;
    }

    public void abc(){

    }

    private static String aDistanceTime(long time2) {
        Date now = new Date();
        long day = 0;// 天数
        long hour = 0;// 小时
        long min = 0;// 分钟
        time2 = time2 * 1000l;
    }

    @Override
    public void onClick(View v) {
        if (v.getId() == R.id.button1) {
            textView.setText("button1_click");
            Toast.makeText(this, "点击 button 1", Toast.LENGTH_SHORT).show();
        } else if (v.getId() == R.id.button2) {
            textView.setText("button2_click");
            Toast.makeText(this, "点击 button 2", Toast.LENGTH_SHORT).show();
        }
    }
}
    ]]>
    </code-fragment>

    <test-code>
        <description>method main activity</description>
        <expected-problems>3</expected-problems>
        <code-ref id="method-main-activity"/>
    </test-code>

    <!-- 没有注释-->
    <code-fragment id="method-have-annotation-comment"><![CDATA[
    public class Tmp extends Object{
        @Override
        public int hashCode() {
            return super.hashCode();
        }

        @Override
        public boolean equals(Object obj) {
            return super.equals(obj);
        }

        @Override
        public String toString() {
            return super.toString();
        }
    }
    ]]>
    </code-fragment>

    <test-code>
        <description>method have annotation comment</description>
        <expected-problems>0</expected-problems>
        <code-ref id="method-have-annotation-comment"/>
    </test-code>


    <!-- 没有注释-->
    <code-fragment id="method-have-no-comment"><![CDATA[
class Example {
        void bar() {
        }
    }
    ]]>
    </code-fragment>

    <test-code>
        <description>method have no comment</description>
        <expected-problems>1</expected-problems>
        <code-ref id="method-have-no-comment"/>
    </test-code>

    <!-- // 注释-->
    <code-fragment id="method-have-single-comment"><![CDATA[
class Example {
        //
        void bar() {
        }
    }
    ]]>
    </code-fragment>

    <test-code>
        <description>method have single comment</description>
        <expected-problems>1</expected-problems>
        <code-ref id="method-have-single-comment"/>
    </test-code>

    <!-- // 注释-->
    <code-fragment id="method-have-single-comment-have-data"><![CDATA[
class Example {
        // 注释
        void bar() {
        }
    }
    ]]>
    </code-fragment>

    <test-code>
        <description>method-have-single-comment-have-data</description>
        <expected-problems>1</expected-problems>
        <code-ref id="method-have-single-comment-have-data"/>
    </test-code>

    <!-- /* */ 注释-->
    <code-fragment id="method-have-formal-comment-no-data"><![CDATA[
class Example {
        /*
         *
         **/
        void bar() {
        }
    }
    ]]>
    </code-fragment>

    <test-code>
        <description>method-have-formal-comment-no-data</description>
        <expected-problems>1</expected-problems>
        <code-ref id="method-have-formal-comment-no-data"/>
    </test-code>

    <!-- /** */ 注释-->
    <code-fragment id="method-have-formal-comment"><![CDATA[
class Example {
         /** 注释
         * @param a a上课了
         * @param b b上两节课
         * @return 1 是
         */
        int bar(int a, int b) {
        }
    }
    ]]>
    </code-fragment>

    <test-code>
        <description>method-have-formal-comment</description>
        <expected-problems>0</expected-problems>
        <code-ref id="method-have-formal-comment"/>
    </test-code>

    <!-- /** */ 注释-->
    <code-fragment id="method-have-formal-comment-no-data2"><![CDATA[
class Example {
         /**
         * @param a
         */
        void bar(int a, int b) {
        }
    }
    ]]>
    </code-fragment>

    <test-code>
        <description>method-have-formal-comment-no-data2</description>
        <expected-problems>3</expected-problems>
        <code-ref id="method-have-formal-comment-no-data2"/>
    </test-code>


    <!-- /** */ 注释里参数和return 也写点东西-->
    <code-fragment id="method-param-and-return-no-data"><![CDATA[
class Example {
         /**
         * 注释
         * @param x
         * @param y
         * @return
         */
        public int b(int x, int y){
            int i = 0;
            return i;
        }
    }
    ]]>
    </code-fragment>

    <test-code>
        <description>method-param-and-return-no-data</description>
        <expected-problems>3</expected-problems>
        <code-ref id="method-param-and-return-no-data"/>
    </test-code>


     字段带is
    <code-fragment id="field-has-is-pre"><![CDATA[
class Example {
        private boolean isGood;

        public boolean isGood(){
            return isGood;
        }

        public Void setGood(boolean isGood){
            this.mGood = isGood;
        }
    }
    ]]>
    </code-fragment>

    <test-code>
        <description>field-has-is-pre</description>
        <expected-problems>0</expected-problems>
        <code-ref id="field-has-is-pre"/>
    </test-code>

    <!-- 字段带m-->
    <code-fragment id="field-has-m-pre"><![CDATA[
class Example {
        private boolean mGood;

        public boolean isGood(){
            return mGood;
        }

        public Void setGood(boolean isGood){
            this.mGood = isGood;
        }
    }
    ]]>
    </code-fragment>

    <test-code>
        <description>field-has-m-pre</description>
        <expected-problems>0</expected-problems>
        <code-ref id="field-has-m-pre"/>
    </test-code>

    <!-- 字段带@override 外还有其他注解-->
    <code-fragment id="method-with-override"><![CDATA[
class Example implements View.OnClickListener{
    @SuppressWarnings("rawtypes")
    @Override
    public void onClick(View v) {
    }
    }
    ]]>
    </code-fragment>

    <test-code>
        <description>method-with-override</description>
        <expected-problems>0</expected-problems>
        <code-ref id="method-with-override"/>
    </test-code>
</test-data>