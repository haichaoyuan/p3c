<test-data>
    <code-fragment id="AvoidStartWithDollarAndUnderLine">
        <![CDATA[
public class AvoidStartWithDollarAndUnderLineNamingRule {
    private String $1;
    private String _1;
    public void $sayHello(){}
    public void _sayHello(){}
}
    ]]>
    </code-fragment>
    <test-code>
        <description>name should not be start with $ and _</description>
        <expected-problems>4</expected-problems>
        <code-ref id="AvoidStartWithDollarAndUnderLine"/>
        <expected-linenumbers>2,3,4,5</expected-linenumbers>
    </test-code>

    <code-fragment id="AvoidStartWithDollarAndUnderLine1">
        <![CDATA[
public class AvoidStartWithDollarAndUnderLineNamingRule {
    private String s;
    public void sayHello(){}
}
    ]]>
    </code-fragment>
    <test-code>
        <description>name should not be start with $ and _</description>
        <expected-problems>0</expected-problems>
        <code-ref id="AvoidStartWithDollarAndUnderLine1"/>
    </test-code>

    <!-- /** */ 注释里带引号等特殊字符-->
    <code-fragment id="special-method-generated"><![CDATA[
    package com.xh.common.db.bean;


import com.xh.module_base.bean.BaseClass;

import org.greenrobot.greendao.annotation.Entity;
import org.greenrobot.greendao.annotation.Id;
import org.greenrobot.greendao.annotation.Keep;
import org.greenrobot.greendao.annotation.ToMany;

import java.io.Serializable;
import java.util.List;
import org.greenrobot.greendao.annotation.Generated;
import org.greenrobot.greendao.DaoException;
import com.xh.alstch.db.DaoSession;
import com.xh.alstch.db.StudentDtoDao;
import com.xh.alstch.db.ClassInfoDao;

/**
 * auth: wangqiankun
 * time: 2018/3/17 0017
 */
@Entity
public class ClassInfo extends BaseClass implements Serializable  {
    private static final long serialVersionUID = 1L;
    int clazzType;//:	integer ($int32)
    ;// 班级类型：0-行政班 1-培优班
    int enrollYear;//:	integer ($int32)
    ;// 入学年份
    int grade;//:	integer ($int32)

    int teacherId;



    ;//学段
    @ToMany(referencedJoinProperty = "fromClazzId")
    List<StudentDto> members;//:	[...]
    int schoolId;//:	integer ($int32)
    ;// 学校ID
    String schoolName;//:	string
    ;// 学校名称
    String subject;//:	string


    public ClassInfo(String clazzName) {
        this.clazzName = clazzName;
    }
    @Generated(hash = 1874580886)
    public ClassInfo(int clazzType, int enrollYear, int grade, int teacherId, int schoolId,
            String schoolName, String subject, String clazzName, long clazzId) {
        this.clazzType = clazzType;
        this.enrollYear = enrollYear;
        this.grade = grade;
        this.teacherId = teacherId;
        this.schoolId = schoolId;
        this.schoolName = schoolName;
        this.subject = subject;
        this.clazzName = clazzName;
        this.clazzId = clazzId;
    }
    @Generated(hash = 295356596)
    public ClassInfo() {
    }
    public int getClazzType() {
        return this.clazzType;
    }
    public void setClazzType(int clazzType) {
        this.clazzType = clazzType;
    }
    public int getEnrollYear() {
        return this.enrollYear;
    }
    public void setEnrollYear(int enrollYear) {
        this.enrollYear = enrollYear;
    }
    public int getGrade() {
        return this.grade;
    }
    public void setGrade(int grade) {
        this.grade = grade;
    }
    public int getSchoolId() {
        return this.schoolId;
    }
    public void setSchoolId(int schoolId) {
        this.schoolId = schoolId;
    }
    public String getSchoolName() {
        return this.schoolName;
    }
    public void setSchoolName(String schoolName) {
        this.schoolName = schoolName;
    }
    public String getSubject() {
        return this.subject;
    }
    public void setSubject(String subject) {
        this.subject = subject;
    }
    public String getClazzName() {
        return this.clazzName;
    }
    public void setClazzName(String clazzName) {
        this.clazzName = clazzName;
    }
    public long getClazzId() {
        return this.clazzId;
    }
    public void setClazzId(long clazzId) {
        this.clazzId = clazzId;
    }
    /**
     * To-many relationship, resolved on first access (and after reset).
     * Changes to to-many relations are not persisted, make changes to the target entity.
     */
    @Generated(hash = 274406372)
    public List<StudentDto> getMembers() {
        if (members == null) {
            final DaoSession daoSession = this.daoSession;
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            StudentDtoDao targetDao = daoSession.getStudentDtoDao();
            List<StudentDto> membersNew = targetDao
                    ._queryClassInfo_Members(clazzId);
            synchronized (this) {
                if (members == null) {
                    members = membersNew;
                }
            }
        }
        return members;
    }
    /** Resets a to-many relationship, making the next get call to query for a fresh result. */
    @Generated(hash = 1358688666)
    public synchronized void resetMembers() {
        members = null;
    }
    /**
     * Convenient call for {@link org.greenrobot.greendao.AbstractDao#delete(Object)}.
     * Entity must attached to an entity context.
     */
    @Generated(hash = 128553479)
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }
        myDao.delete(this);
    }
    /**
     * Convenient call for {@link org.greenrobot.greendao.AbstractDao#refresh(Object)}.
     * Entity must attached to an entity context.
     */
    @Generated(hash = 1942392019)
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }
        myDao.refresh(this);
    }
    /**
     * Convenient call for {@link org.greenrobot.greendao.AbstractDao#update(Object)}.
     * Entity must attached to an entity context.
     */
    @Generated(hash = 713229351)
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }
        myDao.update(this);
    }

    public int getTeacherId() {
        return this.teacherId;
    }
    public void setTeacherId(int teacherId) {
        this.teacherId = teacherId;
    }


    String clazzName;
    @Id
    long clazzId;
    /** Used to resolve relations */
    @Generated(hash = 2040040024)
    private transient DaoSession daoSession;
    /** Used for active entity operations. */
    @Generated(hash = 166870829)
    private transient ClassInfoDao myDao;

    @Override
    public String toString() {
        return "ClassInfo{" +
                "clazzType=" + clazzType +
                ", enrollYear=" + enrollYear +
                ", grade=" + grade +
                ", teacherId=" + teacherId +
                ", members=" + members +
                ", schoolId=" + schoolId +
                ", schoolName='" + schoolName + '\'' +
                ", subject='" + subject + '\'' +
                ", clazzName='" + clazzName + '\'' +
                ", clazzId=" + clazzId +
                ", daoSession=" + daoSession +
                ", myDao=" + myDao +
                '}';
    }
    /** called by internal mechanisms, do not call yourself. */
    @Generated(hash = 252290607)
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getClassInfoDao() : null;
    }
}

    ]]>
    </code-fragment>
    <test-code>
        <description>special-method-generated</description>
        <expected-problems>0</expected-problems>
        <code-ref id="special-method-generated"/>
    </test-code>

</test-data>
